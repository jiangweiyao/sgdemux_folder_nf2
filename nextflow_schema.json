{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/YOUR_PIPELINE/master/nextflow_schema.json",
    "title": "Nextflow pipeline parameters",
    "description": "This pipeline uses Nextflow and processes some kind of data. The JSON Schema was built using the nf-core pipeline schema builder.",
    "type": "object",
    "definitions": {
        "parameters": {
            "title": "Parameters",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "fastq_source_folder": {
                    "type": "string",
                    "description": "Location of the folder of the FASTQ files you wish to demultiplex. Typically the \"unfiltered_fastqs\" in the G4 output.",
                    "default": "s3://singular-public-repo/example_raw_files/unfiltered_fastq/"
                },
                "file_name_root": {
                    "type": "string",
                    "default": "Undetermined",
                    "description": "The root name of FASTQ files. The name in the \"unfiltered_fastqs\" folder for G4 output is Undetermined."
                },
                "samplesheet": {
                    "type": "string",
                    "default": "s3://singular-public-repo/example_raw_files/samplesheet.csv",
                    "description": "Location of the Singular Genomic style samplesheet for demultiplexing the samples."
                },
                "output_dir_name": {
                    "type": "string",
                    "default": "demuxed_file",
                    "description": "Name of the output folder containing the demultiplexed output."
                },
                "out": {
                    "type": "string",
                    "default": "/home/ubuntu/test_demux",
                    "description": "The location of the output files."
                },
                "lane_level": {
                    "type": "boolean",
                    "description": "Whether to demultiplex at the Lane Level (True) or Flow Cell Level (False)."
                },
                "multiqc": {
                    "type": "boolean",
                    "default": true,
                    "description": "Whether to send the demultiplexed files to FastQC and collect metrics in MultiQC."
                },
                "allowed_mismatches": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 6,
                    "default": 3,
                    "description": "The number of mismatches allowed (total) between the expected and observed barcode bases for assigning reads to sample."
                },
                "min_delta": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 5,
                    "default": 1,
                    "description": "The minimum number of mismatches where the best match for a read is better than the next-best match."
                },
                "nmask_threshold": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 20,
                    "description": "Mask template bases to N in all input reads where the base quality score is below the specified value.",
                    "default": 2
                },
                "filter_control": {
                    "type": "boolean",
                    "default": true,
                    "description": "Filter out reads marked as control reads in their FASTQ headers."
                }
            },
            "required": [
                "fastq_source_folder",
                "file_name_root",
                "samplesheet",
                "output_dir_name",
                "out",
                "lane_level",
                "multiqc",
                "allowed_mismatches",
                "min_delta",
                "nmask_threshold",
                "filter_control"
            ]
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/parameters"
        }
    ]
}
